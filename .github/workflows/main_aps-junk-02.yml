name: Deploy FastAPI backend to Azure Web App - aps-junk-02

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1) Python アプリのルート自動検出
      - name: Detect Python app root
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          echo "Searching for python app root (requirements.txt + main.py/app.py)..."

          # よくある候補を先にチェック
          for d in . api server src app; do
            if [ -f "$d/requirements.txt" ] && { [ -f "$d/main.py" ] || [ -f "$d/app.py" ]; }; then
              echo "Found at $d"
              echo "python_dir=$d" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # フォールバック: 広めに検索（深さ3）
          CANDIDATE=$(find . -maxdepth 3 -type f \( -name "main.py" -o -name "app.py" \) \
                      -exec dirname {} \; | while read d; do
                        if [ -f "$d/requirements.txt" ]; then echo "$d"; fi
                      done | head -n1)

          if [ -z "$CANDIDATE" ]; then
            echo "ERROR: Could not find a directory containing requirements.txt and main.py/app.py"
            exit 1
          fi

          echo "Found at $CANDIDATE"
          echo "python_dir=$CANDIDATE" >> $GITHUB_OUTPUT

      # 2) （任意）.env を持ち込む場合：App Service のアプリ設定に入れるのが本来推奨
      - name: (Optional) Write .env into app root
        run: |
          cat > "${{ steps.detect.outputs.python_dir }}/.env" <<'EOF'
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
          PINECONE_INDEX_NAME=${{ secrets.PINECONE_INDEX_NAME }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          EOF

      # 3) ZIP にする場合（中身が“そのディレクトリの中身”になるように）
      - name: Zip Python app root
        run: |
          cd "${{ steps.detect.outputs.python_dir }}"
          zip -r ../release.zip . -x "__pycache__/*" "*.pyc" ".git/*" ".venv/*"
          cd -

      # 4) デプロイ（ZIP のまま渡すのが安全）
      - name: Deploy to Azure Web App (zip)
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'aps-junk-02'
          slot-name: 'Production'
          package: release.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BA8986DBAA384799824599F7D4D1DC35 }}
          startup-command: 'python -m uvicorn main:app --host 0.0.0.0 --port 8000'
